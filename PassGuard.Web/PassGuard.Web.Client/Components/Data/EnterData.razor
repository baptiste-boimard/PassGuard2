@using PassGuard.Shared.Models
@using PassGuard.Shared.State
@inject PasswordState PasswordState
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage


@rendermode InteractiveWebAssembly

<MudText 
    Typo="Typo.h5"
    Style="margin-bottom: 1rem !important;">Ajouter un nouvel enregistrement</MudText>
<MudGrid Style="margin-bottom: 4rem">
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            @if (errorConflict)
            {
                <MudAlert Severity="Severity.Error"
                          ShowCloseIcon="true"
                          CloseIconClicked="(() => CloseErrorConflict())"
                          Style="position: absolute; top: 50%; left:50%; transform: translate(-50%, -50%);
                            background-color: rgba(255, 255, 255, 0.9); z-index: 10; padding: 16px; border-radius: 8px; 
                            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
                            max-width: 400px; width: 100%">Ce site avec ce nom d'utilisateur existe déjà</MudAlert>
            }
            @if (addedPasswordOk)
            {
                <MudAlert Severity="Severity.Success"
                          ShowCloseIcon="true"
                          CloseIconClicked="(() => CloseAddedPassword())"
                          Style="position: absolute; top: 50%; left:50%; transform: translate(-50%, -50%);
                            background-color: rgba(255, 255, 255, 0.9); z-index: 10; padding: 16px; border-radius: 8px; 
                            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);
                            max-width: 400px; width: 100%">Vous mot passe a été ajouté avec succés !!</MudAlert>
            }
            <div style="display: flex; gap: 1rem; align-items: center">
                <MudForm @ref="_form" @bind-IsValid="@_success">
                    <div style="display: flex; gap: 1rem; align-items: flex-start">
                        <MudTextField T="string"
                                      data-testid="site-input"
                                      Label="Site"
                                      Required="true"
                                      RequiredError="Le site est nécessaire !"
                                      @bind-Value="@_objectPassword.Site"/>
                        <MudTextField T="string"
                                      data-testid="username-input"
                                      Label="Nom Utilisateur"
                                      Required="true"
                                      RequiredError="Le nom d'utilisateur est nécessaire !"
                                      @bind-Value="@_objectPassword.Username"/>
                        <MudTextField T="string"
                                      data-testid="password-input"
                                      Label="Mot de passe"
                                      Required="true"
                                      RequiredError="Le mot de passe est nécessaire !"
                                      InputType="InputType.Password"
                                      @bind-Value="@_objectPassword.Password"/>

                        <MudTextField T="string"
                                      data-testid="category-input"
                                      Label="Catégorie"
                                      Required="true"
                                      RequiredError="La catégorie est nécessaire !"
                                      @bind-Value="@_objectPassword.Category"/>
                    </div>
                </MudForm>
                <MudButton Style="margin-top: 1rem"
                           data-testid="add-button"
                           Variant="Variant.Filled"
                           Color="Color.Info"
                           DropShadow="false"
                           OnClick="@(() =>
                                {
                                    _form?.Validate();
                                    SubmitForm();
                                })"
                >Ajouter</MudButton>
            </div>
        </MudPaper>
    </MudItem>
</MudGrid>


@code {
    bool _success;
    MudTextField<string>? _pwField1;
    MudForm? _form;
    private bool errorConflict = false;
    private bool addedPasswordOk = false;
    private string? token;

    ObjectPasswordForm _objectPassword = new ObjectPasswordForm();

    private async Task SubmitForm()
    {
        token = await LocalStorage.GetItemAsync<string>("token");

        var result = await PasswordState.CreatePassword(token, _objectPassword);

        if (result)
        {
            _objectPassword = new ObjectPasswordForm();
            addedPasswordOk = true;
            StateHasChanged();       
        }
        else
        {
            errorConflict = true;
            StateHasChanged();
        }
    }

    private void CloseErrorConflict()
    {
        errorConflict = false;
        StateHasChanged();
    }

    private void CloseAddedPassword()
    {
        addedPasswordOk = false;
        StateHasChanged();
    }
}