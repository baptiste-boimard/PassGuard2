@using System.Net
@using Blazored.LocalStorage
@inject HttpClient HttpClient
@inject NavigationManager Navigation
@inject ILocalStorageService LocalStorage


<MudGrid Class="d-flex justify-end align-up">
    <MudItem xs="12" sm="10" Class="d-flex justify-end">
        <MudPaper Class="pa-4" Style="width: 400px;height: auto;position: relative">
            @if (_errorUnauthorized)
            {
                <MudAlert Severity="Severity.Error"
                          ShowCloseIcon="true"
                          CloseIconClicked="(() => CloseErrorUnauthorized())"
                          Style="position: absolute; top: 50%; left:50%; transform: translate(-50%, -50%);
                            background-color: rgba(255, 255, 255, 0.9); z-index: 10; padding: 16px; border-radius: 8px; 
                            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
                            max-width: 400px; width: 100%">Le nom d'utilisateur et/ou le mot de passe sont incorrects"</MudAlert>
            }
            <MudForm @ref="_form">
                <h3>Se Connecter</h3>
                <MudTextField T="string"
                              Label="Nom d'utilisateur"
                              Required="true"
                              RequiredError="Le nom d'utilisateur est nécessaire !"
                              @bind-Value="@_loginAccountForm.Username"/>
                <MudTextField T="string"
                              Label="Mot de passe"
                              HelperText="Entrer votre mot de passe"
                              InputType="InputType.Password"
                              Required="true"
                              RequiredError="Le mot de passe est nécessaire !"
                              @bind-Value="@_loginAccountForm.Password"/>
                <div class="d-flex align-center justify-space-between">
                    <MudButton Variant="Variant.Filled"
                               Color="Color.Primary"
                               Class="ml-auto mt-12"
                               OnClick="SubmitForm">Se Connecter</MudButton>
                </div>
            </MudForm>
        </MudPaper>
    </MudItem>
</MudGrid>


@code {
    MudForm? _form;
    private class LoginAccountForm
    {
        public string? Username { get; set; }
        public string? Password { get; set; }
    }

    LoginAccountForm _loginAccountForm = new LoginAccountForm();
    private bool _errorUnauthorized = false;
    
    private async Task SubmitForm()
    {
        var content = JsonContent.Create(_loginAccountForm);

        var response = await HttpClient.PostAsync("https://localhost:7012/api/auth/login", content);
        
        string token = await response.Content.ReadAsStringAsync();
        
        if (response.IsSuccessStatusCode)
        {
            await LocalStorage.SetItemAsync("token", token);

            Navigation.NavigateTo("/pass");
            StateHasChanged();       
        }

        if (response.StatusCode == HttpStatusCode.Unauthorized)
        {
            _errorUnauthorized = true;
            StateHasChanged();
        }
    }

    private void CloseErrorUnauthorized()
    {
        _errorUnauthorized = false;
        StateHasChanged();
    }
}